# Generated by Django 4.1.2 on 2022-10-16 14:02

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_name', models.CharField(help_text="The (form) name of the API. Can't contain special characters or spaces", max_length=100, unique=True)),
                ('api_host', models.CharField(help_text='The API host (domain only, e.g. my-api-host.org)', max_length=100)),
                ('api_protocol', models.PositiveSmallIntegerField(choices=[(1, 'http'), (2, 'https')], default=2, help_text='The protocol used (http or https)')),
                ('api_port', models.IntegerField(default=80, help_text='TODO')),
                ('api_label', models.CharField(help_text="The API's label is the title of the queried repository", max_length=250)),
                ('api_page_size', models.IntegerField(default=10, help_text="Size of the result page (e.g. 'How many results at once')")),
            ],
        ),
        migrations.CreateModel(
            name='FilterableListConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(max_length=100, unique=True)),
                ('api_configuration', models.ForeignKey(help_text='TODO', on_delete=django.db.models.deletion.CASCADE, to='ndr_core.apiconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='NdrCoreDataSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_url', models.URLField()),
                ('schema_label', models.CharField(max_length=100)),
                ('schema_name', models.CharField(max_length=100)),
                ('fixture_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NdrCoreValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_name', models.CharField(max_length=100, unique=True)),
                ('value_label', models.CharField(max_length=100)),
                ('value_help_text', models.CharField(max_length=250)),
                ('value_value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NdrSearchField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(help_text="Choose a name for the field. Can't contain spaces or special charactersand must be unique", max_length=100, unique=True)),
                ('field_label', models.CharField(help_text="This is the form field's label", max_length=100)),
                ('field_type', models.PositiveSmallIntegerField(choices=[(1, 'String'), (2, 'Number'), (3, 'Dictionary')], default=1, help_text='Type of the form field. String produces a text field, Number a number field and dictionary a dropdown.')),
                ('field_required', models.BooleanField(default=False, help_text='Does this field need to be filled out?')),
                ('help_text', models.CharField(help_text='The help text which will be displayed in the form', max_length=250)),
                ('api_parameter', models.CharField(help_text='The name of the API parameter which is used to generate a query', max_length=100)),
                ('schema_name', models.CharField(help_text='Name of the schema this search_field is created from', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SearchFieldFormConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_row', models.IntegerField(help_text='The row in the form. Starts with 1.')),
                ('field_column', models.IntegerField(help_text='The column in the form. Is a value between 1 and 12.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('field_size', models.IntegerField(help_text='The size of the field. Is a value between 1 and 12.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('search_field', models.ForeignKey(help_text='The search field to place in a form', on_delete=django.db.models.deletion.CASCADE, to='ndr_core.ndrsearchfield')),
            ],
        ),
        migrations.CreateModel(
            name='SearchConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conf_name', models.CharField(help_text="Name of this search configuration. Can't contain spaces or special characters.", max_length=100, unique=True)),
                ('conf_label', models.CharField(help_text='Label of this search configuration', max_length=100, unique=True)),
                ('api_configuration', models.ForeignKey(help_text='The API to query', on_delete=django.db.models.deletion.CASCADE, to='ndr_core.apiconfiguration')),
                ('search_form_fields', models.ManyToManyField(help_text='Fields associated with this configuration', to='ndr_core.searchfieldformconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='NdrCorePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_name', models.CharField(help_text='The url part of your page (e.g. https://yourdomain.org/p/view_name)', max_length=200, unique=True)),
                ('page_type', models.IntegerField(choices=[(1, 'Template Page'), (2, 'Simple Search'), (3, 'Custom Search'), (4, 'Simple/Custom Search'), (5, 'Contact Form'), (6, 'Filterable List')], default=1, help_text='Choose a type for your page. Template is a static page, search pagesdisplay search forms, a filtered list displays data resources with afilter, contact form displays a form to send a message.')),
                ('name', models.CharField(help_text="The name of the page, e.g. the page's title", max_length=200, verbose_name='Page Title')),
                ('label', models.CharField(help_text="The label of the page, e.g. the page's navigation label", max_length=200)),
                ('nav_icon', models.CharField(blank=True, help_text='The fontawesome nav icon (leave blank if none)', max_length=200)),
                ('index', models.IntegerField(default=0, help_text='Page order')),
                ('template_text', ckeditor.fields.RichTextField(blank=True, help_text='Text for your template page', null=True)),
                ('list_configs', models.ManyToManyField(to='ndr_core.filterablelistconfiguration')),
                ('search_configs', models.ManyToManyField(to='ndr_core.searchconfiguration')),
                ('simple_api', models.ForeignKey(blank=True, help_text='Api for simple search', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ndr_core.apiconfiguration')),
            ],
        ),
    ]
